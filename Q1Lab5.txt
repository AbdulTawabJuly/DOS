[org 0x0100]

jmp Start
Arr1 : dw 1,2,3,4,5
Size : dw 5
Choice : dw 0 	; 1 for Shifting Right and 0 for Shifting Left
No_of_Rotation : dw 2
temp : dw 0
 
Rotate:
push bp
mov bp,sp
push ax
push bx
push cx
push si

mov bx,[bp+10]	;Array
mov ax,[bp+8]	;Size
mov cx,[bp+6]	;Choice
mov dx,[bp+4]	;Rotations
add dx,1
xor si,si
cmp cx,0
jz ShiftLeft
jnz ShiftRight

ShiftLeft:
dec dx
xor si,si
mov ax,[bp+8]
cmp dx,0
jnz Swap1
ret
Swap1:
mov cx,[bx+si]
mov di,[bx+si+2]
mov [bx+si],di
mov [bx+si+2],cx
add si,2
dec ax
cmp ax,1
jnz Swap1
jz ShiftLeft

ShiftRight:
dec dx
mov ax,[bp+8]
cmp dx,0
jnz Swap2
ret
Swap2:
mov cx,[bx+si]


jmp ShiftRight

Start:
mov ax, Arr1
push ax
mov ax, [Size]
push ax
mov ax,[Choice]
push ax
mov ax,[No_of_Rotation]
push ax
call Rotate


End:
mov ax,0x4c00
int 0x21